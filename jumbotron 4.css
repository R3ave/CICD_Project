body {

  padding-top: 50px;

  padding-bottom: 20px;

  font-family: 'Segoe UI', sans-serif;

  background: linear-gradient(to right, #1e3c72, #2a5298);

  color: #f0f0f0;

}
 
/* Navbar */

.navbar-inverse {

  background-color: #212121;

  border-color: #1c1c1c;

}

.navbar-brand {

  color: #ffffff !important;

  font-weight: bold;

  font-size: 20px;

  transition: color 0.3s ease;

}

.navbar-brand:hover {

  color: #00e5ff !important;

}

.navbar-nav > li > a {

  font-weight: bold;

  font-size: 16px;

  color: #f0f0f0 !important;

  transition: color 0.3s ease;

}

.navbar-nav > li > a:hover {

  color: #00e5ff !important;

}
 
/* Jumbotron */

.jumbotron {

  background: linear-gradient(to right, #2c3e50, #2c3e50);

  color: #ffffff;

  padding: 60px 30px;

  border-radius: 10px;

  box-shadow: 0 8px 16px rgba(0,0,0,0.3);

  text-align: center;

}

.jumbotron h1 {

  font-size: 48px;

  animation: fadeInDown 1s ease-out;

}

.jumbotron p {

  font-size: 20px;

  animation: fadeInUp 1s ease-out;

}
 
/* Orange Buttons */

.btn-orange {

  background-color: #ff9800;

  border-color: #fb8c00;

  color: #fff;

  font-weight: bold;

  font-size: 16px;

  padding: 10px 20px;

  border-radius: 6px;

  transition: transform 0.3s ease, background-color 0.3s ease;

}

.btn-orange:hover {

  background-color: #ffa726;

  transform: scale(1.05);

}
 
/* Default Buttons */

.btn-default {

  background-color: #ffffff;

  border-color: #ccc;

  color: #333;

  transition: transform 0.3s ease, background-color 0.3s ease;

}

.btn-default:hover {

  background-color: #eeeeee;

  transform: scale(1.05);

}
 
/* Cards */

/* --- Cards Row: Flex layout with centered items and spacing --- */
.cards-row {
  display: flex;         /* flex container */
  flex-wrap: wrap;       /* allow wrapping */
  gap: 28px;             /* space between cards (both rows & columns) */
  justify-content: center;    /* center cards horizontally in the row */
  align-content: flex-start;   /* keep multiple rows pinned to the top */
  /* If you previously added negative margins for gutters, remove them
     when using 'gap', or set them to 0 to keep edges clean: */
  margin-left: 0;
  margin-right: 0;
}

/* Each Bootstrap column acts as a fixed-width flex item */
.cards-row > [class*="col-"] {
  display: flex;         /* so the card inside can stretch to equal height */
  padding: 0;            /* when using gap, remove column padding gutters */
  /* leave floats alone; mapping below controls widths */
}

/* Map Bootstrap widths to flex-basis so no card spans the entire row */
.cards-row > .col-xs-12 { flex: 0 0 100%; max-width: 100%; }
@media (min-width: 768px) {   /* sm ≥ 768px */
  .cards-row > .col-sm-6 { flex: 0 0 50%; max-width: 50%; }  /* 2 per row */
}
@media (min-width: 992px) {   /* md ≥ 992px */
  .cards-row > .col-md-3 { flex: 0 0 25%; max-width: 25%; }        /* 4 per row */
  .cards-row > .col-md-4 { flex: 0 0 33.333%; max-width: 33.333%; }/* 3 per row */
  .cards-row > .col-md-6 { flex: 0 0 50%; max-width: 50%; }        /* 2 per row */
}

/* --- Card block: equal heights + centered content --- */
.card-block {
  background-color: #2c3e50;
  color: #ecf0f1;
  border-radius: 10px;
  box-shadow: 0 6px 12px rgba(0,0,0,0.2);
  padding: 16px;

  /* Equal-height cards with vertical stacking */
  display: flex;
  flex-direction: column;
  width: 100%;
  min-height: 320px;            /* tweak to taste */
  text-align: center;           /* center text content */
  transition: transform 0.2s ease, box-shadow 0.2s ease, background-color 0.2s ease;
}
.card-block:hover {
  transform: translateY(-4px);
  box-shadow: 0 10px 18px rgba(0,0,0,0.25);
  background-color: #34495e;
}

/* Center the icon and control spacing */
.icon-top {
  color: #ff4081;
  margin-bottom: 8px;
  display: inline-block;        /* ensures it's centered within text-align:center */
}

/* Typography */
.card-block h1, .card-block h2 {
  font-size: 20px;
  color: #fff;
  margin: 8px 0 10px;
}
.card-block p {
  color: #d0d0d0;
  font-size: 14px;
  margin-bottom: 10px;
}

/* Keep the button section at the bottom of the card */
.card-block p:last-child {
  margin-top: auto;
}

/* Buttons inside cards */
.card-block .btn {
  min-width: 160px;
  padding: 9px 16px;
  border-radius: 6px;
  transition: transform 0.2s ease, background-color 0.2s ease, box-shadow 0.2s ease;
}
.card-block .btn:hover {
  transform: translateY(-1px);
  box-shadow: 0 6px 14px rgba(0,0,0,0.18);
}
/* --- The card itself (you’re using .card-block on the column) --- */
/* If your .card-block wraps the card content directly, style it as the card */
.card-block {
  background-color: #2c3e50;
  color: #ecf0f1;
  border-radius: 10px;
  box-shadow: 0 6px 12px rgba(0,0,0,0.2);
  padding: 16px;

  /* Make the card fill the column height and align content vertically */
  display: flex;
  flex-direction: column;
  width: 100%;
  min-height: 320px;    /* increase if you want taller cards; try 360–420px */
  text-align: center;
  transition: transform 0.2s ease, box-shadow 0.2s ease, background-color 0.2s ease;
}

.card-block:hover {
  transform: translateY(-4px);
  box-shadow: 0 10px 18px rgba(0,0,0,0.25);
  background-color: #34495e;
}

/* Icon, titles, text inside the card */
.icon-top { color: #ff4081; margin-bottom: 18px; }
.card-block h1, .card-block h2 {
  font-size: 30px;
  color: #fff;
  margin: 8px 0 10px;
}
.card-block p {
  color: #d0d0d0;
  font-size: 14px;
  margin-bottom: 10px;
}

/* Keep the last paragraph (your button wrapper) at the bottom */
.card-block p:last-child { margin-top: auto; }

/* Card buttons */
.card-block .btn {
  min-width: 160px;
  padding: 20px 16px;
  border-radius: 6px;
  transition: transform 0.2s ease, background-color 0.2s ease, box-shadow 0.2s ease;
}
.card-block .btn:hover {
  transform: translateY(-1px);
  box-shadow: 0 6px 14px rgba(0,0,0,0.18);
}
 
/* Footer */

footer {

  text-align: center;

  padding: 20px;

  background-color: #212121;

  color: #f8f9fa;

  border-radius: 5px;

}
 
/* Animations */

@keyframes fadeInDown {

  from { opacity: 0; transform: translateY(-20px); }

  to { opacity: 1; transform: translateY(0); }

}

@keyframes fadeInUp {

  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}